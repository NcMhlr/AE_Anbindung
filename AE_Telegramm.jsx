#include "json2.js"(function importOlympiaErgebnisse(){    var scriptName = "Import Ergebnisse";var daten = new Object();var txtExtension = ".txt";	var txtExtensionFilter;var fileToImport;var ErrorString;	// filter function (for Mac) to show only TXT files in the file dialog box	function isTXTFile(fileObj)	{		var istxt = false;				if (fileObj) {			if ((fileObj instanceof File) && fileObj.exists) {				istxt = fileObj.name.indexOf(txtExtension, fileObj.name.length - txtExtension.length) !== -1;			} else if ((fileObj instanceof Folder) && fileObj.exists) {				istxt = true;	// allow folders to be selectable so that you can navigate into them			}		}				return istxt;	}	// Textdatei öffnen//function openTextFile(){                txtExtensionFilter = ($.os.indexOf("Windows") !== -1) ? "*"+txtExtension : isTXTFile;        fileToImport = File.openDialog("Select a Textfile", txtExtensionFilter, true);        if (!fileToImport || fileToImport.exists) {            ErrorString            return;        }        var txtFile = new File(fileToImport);        txtFile.open("r");        txtFile.encoding = "utf-8";        var jsonString = txtFile.read();        alert(jsonString);                daten = JSON.parse(jsonString);}// Funktion getCompByName// Funktion um eine Composition mit einem bestimmten Namen zu finden und als Objekt zurückzugeben// Name der Composition als String in die Funktion übergebenfunction getCompByName(txtCompName){    alert(txtCompName);var compbyName;for (var i = 1; i <= app.project.numItems; i ++) {    if ((app.project.item(i) instanceof CompItem) && (app.project.item(i).name === txtCompName)) {        if (compbyName) {            throw new Error();  //or something else        }        return myComp = app.project.item(i);    }  }}// Funktion getCompByName// Funktion um ein FootageItem mit einem bestimmten Namen zu finden und als Objekt zurückzugeben// Name des Items als String in die Funktion übergebenfunction getItemByName(txtItemName){{  for (var i = 1; i <= app.project.numItems; i++){    if ((app.project.item(i) instanceof FootageItem) && app.project.item(i).name == txtItemName){      return app.project.item(i)    }  }}}// Funktion txtErsetzenfunction txtErsetzen(kompName, layerName, txtString){        var layer = kompName.layer(layerName);         if ((layer instanceof TextLayer) && layer.name == layerName){            var textProp = layer.property("Source Text");            var textDocument = textProp.value;            textDocument.text = txtString;            textProp.setValue(textDocument);        }return;}// Funktion imageErsetzenfunction imageErsetzen(kompName, layerName, txtString){    var layer = myComp.layer(layerName);    var source = getItemByName(txtString);        if(!source){        source = getItemByName("Leer.png");         alert(txtString + " konnte im Projekt nicht gefunden werden!");        };        layer.replaceSource(source, true);        }// Funktion alle Eigenschaften eines Objekts durchgehenfunction objProperties(myObject){alert(myObject);    for( property in myObject ) {     if (getCompByName (myObject[property][0]) instanceof CompItem){                        // Komposition wird geholt            var myComp = getCompByName (myObject[property][0]);                if(myObject[property][1] == "txt"){                    txtErsetzen(myComp, myObject[property][2], myObject[property][3]);                };                            if(myObject[property][1] == "img"){                   imageErsetzen(myComp, myObject[property][2], myObject[property][3]);                } ;                        }else{            meldungHinzufügen("Warnung: " + myObject[property][0] + " existiert im Projekz nicht!", "Achtung!");        }  }}// Funktion ErrorStringfunction meldungHinzufügen(errorText){        ErrorString = ErrorString + errorText+"\n";         };// Funktion Gesamtablauffunction programmAblauf(){    openTextFile ();    objProperties (daten);    alert(ErrorString);    }programmAblauf ();})();    